<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>419</string>
	<key>AMApplicationVersion</key>
	<string>2.6</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Run AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>(* Import action from selected at per line, to temporary project. *)
on run {input, parameters}
	set theRawLines to my getRawLines(input as string)
	if not length of theRawLines is greater than 0 then return input
	
	set theTrimmedLines to my getTrimmedLines(theRawLines)
	if not length of theTrimmedLines is greater than 0 then return input
	
	tell application "OmniFocus"
		tell default document
			set now to current date
			set projectName to "bulk action at " &amp; (now as string)
			set theProject to make new project with properties {name:projectName}
			repeat with actionName in theTrimmedLines
				tell theProject to make new task with properties {name:actionName}
			end repeat
		end tell
	end tell
	
	return input
end run

on getRawLines(input)
	set theRawLines to my split(input, {return, linefeed})
	return theRawLines
end getRawLines

on getTrimmedLines(theLines)
	set theTrimmedLines to {}
	repeat with theLine in theLines
		if length of theLine is greater than 0 then
			set theTrimmedLine to my trim(true, theLine)
			-- suppress empty line
			if length of theTrimmedLine is greater than 0 then
				set theTrimmedLines to theTrimmedLines &amp; theTrimmedLine
			end if
		end if
	end repeat
	return theTrimmedLines
end getTrimmedLines

on isValidName(value)
	return
end isValidName

on split(input, delimiters)
	set AppleScript's text item delimiters to delimiters
	set output to input's text items
	set AppleScript's text item delimiters to {""}
	return output
end split

-- http://macscripter.net/viewtopic.php?id=18519
on trim(theseCharacters, someText)
	-- Lazy default (AppleScript doesn't support default values)
	if theseCharacters is true then set theseCharacters to Â¬
		{" ", tab, linefeed, return, ASCII character 0}
	
	if length of someText is 0 then return ""
	
	repeat until first character of someText is not in theseCharacters
		if length of someText is 1 then return ""
		set someText to text 2 thru -1 of someText
	end repeat
	
	repeat until last character of someText is not in theseCharacters
		if length of someText is 1 then return ""
		set someText to text 1 thru -2 of someText
	end repeat
	
	return someText
end trim</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>604FC616-DCC4-4E05-B80D-8C6C4A8BF308</string>
				<key>Keywords</key>
				<array>
					<string>Run</string>
				</array>
				<key>OutputUUID</key>
				<string>180AB53E-C46B-42D7-A679-DE73EB93D0F5</string>
				<key>UUID</key>
				<string>92AC2B8C-56C3-48E4-A5E5-9C663AE8E3FE</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>conversionLabel</key>
				<integer>0</integer>
				<key>isViewVisible</key>
				<true/>
				<key>location</key>
				<string>288.000000:316.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<true/>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.text</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<integer>0</integer>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
